name: PowerBI-CICD-$(Date:yyyyMMdd)$(Rev:.r)

# Define triggers
trigger:
  branches:
    include:
      - main
      - feature/*
  paths:
    include:
      - '**/*.Report/**'
      - '**/*.SemanticModel/**'

pr:
  branches:
    include:
      - main

variables:
- group: PowerBIDevelopmentVariables

pool:
  name: Default

# -----------------------------------------------------------------------------------------------------------------------
# Artifacts BUILD Stage
# -----------------------------------------------------------------------------------------------------------------------
stages:
  - stage: Build
    displayName: 'Build and BPA Checks'
    jobs:
      # Evaluate if the build stage should run based on file changes
      - job: EvaluateBuildRun
        displayName: 'Evaluate File Changes'
        steps:
          - checkout: self
            fetchDepth: 0

          - powershell: |
              # Authenticate using pipeline token
              git -c http.extraheader="AUTHORIZATION: bearer $(System.AccessToken)" fetch origin main

              $changes = git diff --name-only origin/main...HEAD
              Write-Host "Changed files:"
              $changes

              # Always set the variable to something to avoid 'Null'
              $shouldRunBuild = $false

              if ("$(Build.SourceBranchName)" -eq "main") {
                  $shouldRunBuild = $true
              } elseif ($changes -match '\.Report\\' -or $changes -match '\.SemanticModel\\') {
                  $shouldRunBuild = $true
              }

              Write-Host "##vso[task.setvariable variable=RunBuildStage;isOutput=true]$shouldRunBuild"
              Write-Host "RunBuildStage evaluated to: $shouldRunBuild"
            displayName: 'Set RunBuildStage Variable'
            env:
              System.AccessToken: $(System.AccessToken)


      - job: BPA_SemanticModels
        dependsOn: EvaluateBuildRun
        displayName: 'BPA Semantic Models'
        condition: eq(variables['RunBuildStage'], 'true')
        pool:
          name: Default
        steps:
          - checkout: self

          - task: PowerShell@2
            displayName: 'Run BPA on Semantic Models'
            inputs:
              targetType: inline
              script: |
                # Ensure the script is executable or specify full path
                $scriptPath = "$(Build.SourcesDirectory)\.bpa\bpa.ps1"
                $srcPath = "$(Build.SourcesDirectory)\src" # Assuming your PBIP components are in a 'src' folder

                # Correctly pass array arguments to PowerShell script
                & "$scriptPath" -src @("$srcPath\*.SemanticModel")

      - job: BPA_Reports
        dependsOn: EvaluateBuildRun
        displayName: 'BPA Reports'
        condition: eq(variables['RunBuildStage'], 'true')
        pool:
          name: Default
        steps:
          - checkout: self

          - task: PowerShell@2
            displayName: 'Run BPA on Reports'
            inputs:
              targetType: inline
              script: |
                $scriptPath = "$(Build.SourcesDirectory)\.bpa\bpa.ps1"
                $srcPath = "$(Build.SourcesDirectory)\src" # Assuming your PBIP components are in a 'src' folder

                & "$scriptPath" -src @("$srcPath\*.Report")

# -----------------------------------------------------------------------------------------------------------------------
# Deployment Stages
# -----------------------------------------------------------------------------------------------------------------------
  - stage: Deploy_DEV
    displayName: 'Deploy to DEV'
    dependsOn: Build
    condition: succeeded()
    variables:
    - group: PowerBIDevelopmentVariables
    - name: environment_name
      value: DEV
    - name: workspace_name
      value: $(dev_workspace_name)
    jobs:
      - deployment: DeployFabricItems
        displayName: 'Deploy Fabric Items'
        environment: 'ContosoDEV'
        # If using a self-hosted agent, ensure Python is installed or use UsePythonVersion
        pool:
          name: Default
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - script: |
                    "C:\Program Files\Python312\python.exe" --version
                    "C:\Program Files\Python312\python.exe" -m pip install azure-identity fabric-cicd
                  displayName: 'Install Python Packages'

                - script: |
                    "C:\Program Files\Python312\python.exe" deploy.py ^
                      --spn-auth ^
                      --workspace "$(workspace_name)" ^
                      --src "$(Build.SourcesDirectory)/src"
                  displayName: 'Run $(environment_name) Deployment Script'                 
                  env:
                      FABRIC_CLIENT_ID: $(powerbi_client_id)
                      FABRIC_CLIENT_SECRET: $(powerbi_client_secret)
                      FABRIC_TENANT_ID: $(tenant_id)

  - stage: Deploy_UAT
    displayName: 'Deploy to UAT'
    dependsOn: Deploy_DEV
    condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))
    variables:
    - group: PowerBIDevelopmentVariables
    - name: environment_name
      value: UAT
    - name: workspace_name
      value: $(uat_workspace_name)
    jobs:
      - deployment: DeployFabricItemsUAT
        displayName: 'Deploy Fabric Items to UAT'
        environment: 'ContosoUAT'
        pool:
          name: Default
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                - script: |
                    "C:\Program Files\Python312\python.exe" deploy.py ^
                      --spn-auth ^
                      --workspace "$(workspace_name)" ^
                      --src "$(Build.SourcesDirectory)/src"
                  displayName: 'Run $(environment_name) Deployment Script'                 
                  env:
                      FABRIC_CLIENT_ID: $(powerbi_client_id)
                      FABRIC_CLIENT_SECRET: $(powerbi_client_secret)
                      FABRIC_TENANT_ID: $(tenant_id)

  - stage: Deploy_PROD
    displayName: 'Deploy to PROD'
    dependsOn: Deploy_UAT
    condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'main'))
    variables:
    - group: PowerBIDevelopmentVariables
    - name: environment_name
      value: PROD
    - name: workspace_name
      value: $(prod_workspace_name)
    jobs:
      - deployment: DeployFabricItemsPROD
        displayName: 'Deploy Fabric Items to PROD'
        environment: 'ContosoPROD'
        pool:
          name: Default
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self

                - script: |
                    "C:\Program Files\Python312\python.exe" deploy.py ^
                      --spn-auth ^
                      --workspace "$(workspace_name)" ^
                      --src "$(Build.SourcesDirectory)/src"
                  displayName: 'Run $(environment_name) Deployment Script'                 
                  env:
                      FABRIC_CLIENT_ID: $(powerbi_client_id)
                      FABRIC_CLIENT_SECRET: $(powerbi_client_secret)
                      FABRIC_TENANT_ID: $(tenant_id)